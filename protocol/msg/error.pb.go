// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: error.proto

package msg

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 返回给客户端的错误
type ERROR int32

const (
	ERROR_SUCCESS       ERROR = 0
	ERROR_UNKNOWN_ERROR ERROR = 1
	ERROR_REPEATED_NAME ERROR = 2
)

var ERROR_name = map[int32]string{
	0: "SUCCESS",
	1: "UNKNOWN_ERROR",
	2: "REPEATED_NAME",
}

var ERROR_value = map[string]int32{
	"SUCCESS":       0,
	"UNKNOWN_ERROR": 1,
	"REPEATED_NAME": 2,
}

func (x ERROR) String() string {
	return proto.EnumName(ERROR_name, int32(x))
}

func (ERROR) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0579b252106fcf4a, []int{0}
}

// 服务内部错误
type INNER_ERROR int32

const (
	INNER_ERROR_IN_SUCCESS      INNER_ERROR = 0
	INNER_ERROR_IN_INVALID_ROOM INNER_ERROR = 1
)

var INNER_ERROR_name = map[int32]string{
	0: "IN_SUCCESS",
	1: "IN_INVALID_ROOM",
}

var INNER_ERROR_value = map[string]int32{
	"IN_SUCCESS":      0,
	"IN_INVALID_ROOM": 1,
}

func (x INNER_ERROR) String() string {
	return proto.EnumName(INNER_ERROR_name, int32(x))
}

func (INNER_ERROR) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0579b252106fcf4a, []int{1}
}

func init() {
	proto.RegisterEnum("msg.ERROR", ERROR_name, ERROR_value)
	proto.RegisterEnum("msg.INNER_ERROR", INNER_ERROR_name, INNER_ERROR_value)
}

func init() { proto.RegisterFile("error.proto", fileDescriptor_0579b252106fcf4a) }

var fileDescriptor_0579b252106fcf4a = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x2a, 0xca,
	0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0xd7, 0xb2, 0xe2, 0x62,
	0x75, 0x0d, 0x0a, 0xf2, 0x0f, 0x12, 0xe2, 0xe6, 0x62, 0x0f, 0x0e, 0x75, 0x76, 0x76, 0x0d, 0x0e,
	0x16, 0x60, 0x10, 0x12, 0xe4, 0xe2, 0x0d, 0xf5, 0xf3, 0xf6, 0xf3, 0x0f, 0xf7, 0x8b, 0x07, 0xcb,
	0x0a, 0x30, 0x82, 0x84, 0x82, 0x5c, 0x03, 0x5c, 0x1d, 0x43, 0x5c, 0x5d, 0xe2, 0xfd, 0x1c, 0x7d,
	0x5d, 0x05, 0x98, 0xb4, 0x8c, 0xb8, 0xb8, 0x3d, 0xfd, 0xfc, 0x5c, 0x83, 0x20, 0x6a, 0x84, 0xf8,
	0xb8, 0xb8, 0x3c, 0xfd, 0xe2, 0x11, 0x86, 0x08, 0x73, 0xf1, 0x7b, 0xfa, 0xc5, 0x7b, 0xfa, 0x85,
	0x39, 0xfa, 0x78, 0xba, 0xc4, 0x07, 0xf9, 0xfb, 0xfb, 0x0a, 0x30, 0x3a, 0xc9, 0x9d, 0x78, 0x24,
	0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78,
	0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x14, 0x8b, 0x7e, 0x6e, 0x71, 0x7a, 0x12, 0x1b, 0xd8,
	0x6d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0xe3, 0xfd, 0xb0, 0xaa, 0x00, 0x00, 0x00,
}
